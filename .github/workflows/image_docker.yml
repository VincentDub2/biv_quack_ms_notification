name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Vérifie le code du repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Configure Java (nécessaire pour les tests)
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '21' # Version de Java à utiliser (adapter si nécessaire)
        distribution: 'temurin'

    # Exécute les tests
    - name: Run Tests
      run: |
        ./gradlew clean test # Commande pour exécuter les tests avec Gradle
      env:
        CI: true # Indique que les tests sont exécutés dans un environnement CI

    # Se connecte à Docker Hub (ou autre registry)
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Construit l'image Docker
    - name: Build Docker Image
      run: |
        docker build -t vincentdub/service-notification:latest -f Dockerfile .

    # Pousse l'image dans le repository centralisé
    - name: Push Docker Image
      run: |
        docker push vincentdub/service-notification:latest
